    const uint16_t kmask1 = 0x0303;
    const uint16_t kmask2 = 0x0f0f;
    const uint16_t s_shift1 = 4*ip;
    const uint16_t s_shift2 = s_shift1 + 2*(il/2);
    const int ik = 4 + (il%2);
    //float sumf = 0;
    float sumf1 = 0, sumf2 = 0;
            s += y[l+ 0] * ((int8_t)((q[l+ 0] >> shift) & m3) - ((h[l+ 0] & m) ? 0 : m4));
        float d = d_all * s;
        sumf1 += d * scales[0];
        sumf2 += d;
        //sumf += d_all * s * (scales[0] - 32);
            s += y[l+16] * ((int8_t)((q[l+16] >> shift) & m3) - ((h[l+16] & m) ? 0 : m4));
        d = d_all * s;
        sumf1 += d * scales[1];
        sumf2 += d;
        //sumf += d_all * s * (scales[1] - 32);
    //sum[ith] = sumf;
    sum[ith] = sumf1 - 32.f*sumf2;