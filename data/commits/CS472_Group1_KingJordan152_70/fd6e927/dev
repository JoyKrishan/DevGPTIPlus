# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def removeNthFromEnd(self, head: Optional[ListNode], n: int) -> Optional[ListNode]:
        head_ptr = ListNode(next=head)

        fast = head_ptr
        slow = head_ptr

        for i in range(n):
            fast = fast.next

        while fast.next:
            slow = slow.next
            fast = fast.next

        if head == slow.next:
            head = head.next
        else:
            slow.next = slow.next.next

        return head