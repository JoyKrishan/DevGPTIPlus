        transform = torch.matmul(u, v_t)
            transform = torch.linalg.matrix_power(transform, round(alpha))
        u[:, -1] /= torch.det(u) * torch.det(v_t)
        transform = torch.matmul(u, v_t)
        transform = fractional_matrix_power(transform, alpha)
    a_2d = torch.matmul(a_2d, transform)
    eigenvalues, eigenvectors = torch.linalg.eig(matrix.double())
    result = eigenvectors @ torch.diag(eigenvalues) @ torch.linalg.inv(eigenvectors)
    error = torch.linalg.vector_norm(result.imag)
    return result.real.to(dtype=matrix.dtype)